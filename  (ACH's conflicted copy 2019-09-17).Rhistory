vm <- rcorr(vmPFC)
m <- rcorr(mOFC)
a <- rcorr(amyg)
h <- rcorr(hpc)
d <- rcorr(dACC)
m
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(psc[which(psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(psc[which(psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(psc[which(psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(psc[which(psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(psc[which(psc$roi == 'dACC_beta'),], ev)
rcorr <- function(roi){
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
#first one is ER
out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSm_cope','early_CSp_CSm','early_CSm_CSp','late_CSp_cope','late_CSm_cope','late_CSp_CSm','late_CSm_CSp'))
#middle one is IDK
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSp_CSm','late_CSp_cope','late_CSp_CSm','all_CSp_cope','all_CSp_CSm'))
#this one is day1
#out <- data.frame(row.names = c('junk1','junk2','junk3','jnk4','CSp_pe','CSm_pe','CSp_CSm','CSm_CSp'))
out['c_r'] <- NaN
out['c_p'] <- NaN
out['p_r'] <- NaN
out['p_p'] <- NaN
for(img in row.names(out)){
cr = cor.test(roi$ev[cmap], roi[img][cmap,])
out[img,'c_r'] <- cr$estimate[['cor']]
out[img,'c_p'] <- cr$p.value
pr = cor.test(roi$ev[pmap], roi[img][pmap,])
out[img,'p_r'] <- pr$estimate[['cor']]
out[img,'p_p'] <- pr$p.value
}
return(out)
}
vm <- rcorr(vmPFC)
m <- rcorr(mOFC)
a <- rcorr(amyg)
h <- rcorr(hpc)
d <- rcorr(dACC)
vm
m
a
d
h
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\run003_beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(psc[which(psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(psc[which(psc$roi == 'hippocampus_beta'),], ev)
vmPFC = cbind(psc[which(psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(psc[which(psc$roi == 'dACC_beta'),], ev)
rcorr <- function(roi){
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
#first one is ER
out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSm_cope','early_CSp_CSm','early_CSm_CSp','late_CSp_cope','late_CSm_cope','late_CSp_CSm','late_CSm_CSp'))
#middle one is IDK
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSp_CSm','late_CSp_cope','late_CSp_CSm','all_CSp_cope','all_CSp_CSm'))
#this one is day1
#out <- data.frame(row.names = c('junk1','junk2','junk3','jnk4','CSp_pe','CSm_pe','CSp_CSm','CSm_CSp'))
out['c_r'] <- NaN
out['c_p'] <- NaN
out['p_r'] <- NaN
out['p_p'] <- NaN
for(img in row.names(out)){
cr = cor.test(roi$ev[cmap], roi[img][cmap,])
out[img,'c_r'] <- cr$estimate[['cor']]
out[img,'c_p'] <- cr$p.value
pr = cor.test(roi$ev[pmap], roi[img][pmap,])
out[img,'p_r'] <- pr$estimate[['cor']]
out[img,'p_p'] <- pr$p.value
}
return(out)
}
vm <- rcorr(vmPFC)
mOFC = cbind(psc[which(psc$roi == 'mOFC_beta'),], ev)
m <- rcorr(mOFC)
rcorr <- function(roi){
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
#first one is ER
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSm_cope','early_CSp_CSm','early_CSm_CSp','late_CSp_cope','late_CSm_cope','late_CSp_CSm','late_CSm_CSp'))
#middle one is IDK
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSp_CSm','late_CSp_cope','late_CSp_CSm','all_CSp_cope','all_CSp_CSm'))
#this one is day1
out <- data.frame(row.names = c('junk1','junk2','junk3','jnk4','CSp_pe','CSm_pe','CSp_CSm','CSm_CSp'))
out['c_r'] <- NaN
out['c_p'] <- NaN
out['p_r'] <- NaN
out['p_p'] <- NaN
for(img in row.names(out)){
cr = cor.test(roi$ev[cmap], roi[img][cmap,])
out[img,'c_r'] <- cr$estimate[['cor']]
out[img,'c_p'] <- cr$p.value
pr = cor.test(roi$ev[pmap], roi[img][pmap,])
out[img,'p_r'] <- pr$estimate[['cor']]
out[img,'p_p'] <- pr$p.value
}
return(out)
}
vm <- rcorr(vmPFC)
m <- rcorr(mOFC)
a <- rcorr(amyg)
h <- rcorr(hpc)
d <- rcorr(dACC)
m
require(mediation)
install.packages("mediation")
require(mediation)
install.packages("mvtnorm")
require(mediation)
veron
verison
version
require(mediation)
install.packages("mediation")
require(mediation)
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
e_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\run003_beta_values.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(r_psc[which(r_psc$roi == 'amygdala_beta'),],e_psc[which(e_psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(r_psc[which(r_psc$roi == 'hippocampus_beta'),],e_psc[which(e_psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],e_psc[which(e_psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(r_psc[which(r_psc$roi == 'vmPFC_beta'),],e_psc[which(e_psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(r_psc[which(r_psc$roi == 'dACC_beta'),],e_psc[which(e_psc$roi == 'dACC_beta'),], ev)
group=cmap
ROI1 = mOFC
ROI2 = amyg
rdat <- data.frame(
roi1=ROI1[group,'early_CSp_CSm'],
roi2=ROI2[group,'early_CSp_CSm'],
evidence=ev[group,'ev']
)
model.r <- 'evidence ~ a*roi1
roi2 ~ b*evidence + c*roi1
indirect := a*b
direct   := c
total    := c + (a*b)'
fit.r <- sem(model.r, data=rdat)
summary(fit.r)
med_fit <- lm(evidence ~ roi1,data=rdat)
out_fit <- lm(roi2 ~ evidence + roi1,data=rdat)
med.out <- mediate(med_fit, out_fit, treat = "roi1", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
require(ggplot2)
require(ggpubr)
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(psc[which(psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(psc[which(psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(psc[which(psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(psc[which(psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(psc[which(psc$roi == 'dACC_beta'),], ev)
rcorr <- function(roi){
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
#first one is ER
out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSm_cope','early_CSp_CSm','early_CSm_CSp','late_CSp_cope','late_CSm_cope','late_CSp_CSm','late_CSm_CSp'))
#middle one is IDK
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSp_CSm','late_CSp_cope','late_CSp_CSm','all_CSp_cope','all_CSp_CSm'))
#this one is day1
#out <- data.frame(row.names = c('junk1','junk2','junk3','jnk4','CSp_pe','CSm_pe','CSp_CSm','CSm_CSp'))
out['c_r'] <- NaN
out['c_p'] <- NaN
out['p_r'] <- NaN
out['p_p'] <- NaN
for(img in row.names(out)){
cr = cor.test(roi$ev[cmap], roi[img][cmap,])
out[img,'c_r'] <- cr$estimate[['cor']]
out[img,'c_p'] <- cr$p.value
pr = cor.test(roi$ev[pmap], roi[img][pmap,])
out[img,'p_r'] <- pr$estimate[['cor']]
out[img,'p_p'] <- pr$p.value
}
return(out)
}
vm <- rcorr(vmPFC)
m <- rcorr(mOFC)
a <- rcorr(amyg)
h <- rcorr(hpc)
d <- rcorr(dACC)
m
d
m
vm
a
h
mtumTEETtum
r_psc = read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/beta_values.csv')
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\FearCon\\graphing\\signal_change\\beta_values.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
require(ggplot2)
require(ppcor)
require(hmisc)
require(mediation)
require(lavaan)
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(r_psc[which(r_psc$roi == 'amygdala_beta'),],e_psc[which(e_psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(r_psc[which(r_psc$roi == 'hippocampus_beta'),],e_psc[which(e_psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],e_psc[which(e_psc$roi == 'mOFC_beta'),], ev)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),]scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr)
###########################################
group=cmap
ROI = mOFC
data1 <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
extinction=ROI[group,'CSp_CSm'],
evidence=ROI[group,'ev']
)
pcor(data1)
pcres <- pcor.test(data1$extinction,data1$renewal,data1$evidence,method="pearson")
print(pcres)
model.context <- 'evidence ~ extinction
renewal ~ evidence + extinction'
model.dat = data1
context.fit <- sem(model.context, data=model.dat)
summary(context.fit)
model.context2 <- 'evidence ~ a*extinction
renewal ~ b*evidence + c*extinction
indirect := a*b
direct   := c
total    := c + (a*b)'
context.fit2 <- sem(model.context2, data=model.dat)
summary(context.fit2)
################################
med_fit <- lm(evidence ~ extinction,data=data1)
out_fit <- lm(renewal ~ evidence + extinction,data=data1)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
plot(med.out)
####################################
group=pmap
ROI1 = mOFC
ROI2 = amyg
rdat <- data.frame(
roi1=ROI1[group,'early_CSp_CSm'],
roi2=ROI2[group,'early_CSp_CSm'],
evidence=ev[group,'ev']
)
model.r <- 'evidence ~ a*roi1
roi2 ~ b*evidence + c*roi1
indirect := a*b
direct   := c
total    := c + (a*b)'
fit.r <- sem(model.r, data=rdat)
summary(fit.r)
med_fit <- lm(evidence ~ roi1,data=rdat)
out_fit <- lm(roi2 ~ evidence + roi1,data=rdat)
med.out <- mediate(med_fit, out_fit, treat = "roi1", mediator = "evidence", boot=TRUE, sims = 10000)
summary(med.out)
plot(med.out)
###################################
group <- pmap
netdat <- data.frame(
vmPFC=mOFC[group,'early_CSp_CSm'],
amygdala=amyg[group,'early_CSp_CSm'],
hippocampus=hpc[group,'early_CSp_CSm']
)
pcor(netdat)
pcres <- pcor.test(data$extinction,data$renewal,data$evidence,method="pearson")
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr])
scr
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr$scr])
SvmPFC
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr$scr])
SvmPFC
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')][cmap],scr$scr])
scr = rbind((scr,scr))
scr = rbind(scr,scr)
scr
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
scr = rbind(scr,scr)
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr$scr])
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr$scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr$scr)
SvmPFC
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr)
SvmPFC
group=cmap
ROI = mOFC
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'ev']
)
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'scr']
)
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'scr']
)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr,ev)
cmap = which(ev$Group == 'Control')
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
scr = rbind(scr,scr)
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(r_psc[which(r_psc$roi == 'amygdala_beta'),],e_psc[which(e_psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(r_psc[which(r_psc$roi == 'hippocampus_beta'),],e_psc[which(e_psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],e_psc[which(e_psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(r_psc[which(r_psc$roi == 'vmPFC_beta'),],e_psc[which(e_psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(r_psc[which(r_psc$roi == 'dACC_beta'),],e_psc[which(e_psc$roi == 'dACC_beta'),], ev)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr,ev)
SvmPFC
cmap
ROI
ROI[group,'ev']
ROI[group,'scr']
group=cmap
ROI = SvmPFC
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'scr'],
evidence=ROI[group,'ev']
)
sdata
med_fit <- lm(evidence ~ renewal,data=data1)
out_fit <- lm(scr ~ evidence + extinction,data=data1)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + extinction,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + extinction,data=sdata)
out_fit <- lm(scr ~ evidence + renewal,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + renewal,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med.out <- mediate(med_fit, out_fit, treat = "renewal", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
plot(med.out)
source('C:/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/pcorr.R', echo=TRUE)
plot(med.out)
summary(out_fit)
summary(med.out)
install.packages(c("magick", "rgl"))
install.packages("lmtest")
library("lme4")
getwd()
setwd("C:/Users/ACH/Dropbox (LewPeaLab)/Dunsmoor Lab/posgen)
library("lme4")
library(lmtest)
install.packages("lme4")
## parse that there data
pg<-read.csv("posgen_data.csv")
pg_1 <- subset(pg, subset = phase == 1)
pg_2 <- subset(pg,subset = phase == 2)
pg_3 <- subset(pg,subset = phase == 3)
fg<-read.csv("feargen_data.csv")
fg_1 <- subset(fg, subset = phase == 1)
fg_2 <- subset(fg,subset = phase == 2)
fg_3 <- subset(fg,subset = phase == 3)
##posgen modeling
lm_pg_full <- lmer(pg$scr~pg$face+(1|pg$subject), REML=FALSE)
lm_pg_1 <- lmer(pg_1$scr~pg_1$face+(1|pg_1$sub), REML=FALSE)
lm_pg_2 <- lmer(pg_2$scr~pg_2$face+(1|pg_2$sub), REML=FALSE)
lm_pg_3 <- lmer(pg_3$scr~pg_3$face+(1|pg_3$sub), REML=FALSE)
lm_pg_full_poly <- lmer(pg$scr~poly(pg$face,2)+(1|pg$sub), REML=FALSE)
lm_pg_1_poly <- lmer(pg_1$scr~poly(pg_1$face,2)+(1|pg_1$sub), REML=FALSE)
lm_pg_2_poly <- lmer(pg_2$scr~poly(pg_2$face,2)+(1|pg_2$sub), REML=FALSE)
lm_pg_3_poly <- lmer(pg_3$scr~poly(pg_3$face,2)+(1|pg_3$sub), REML=FALSE)
##feargen modeling
lm_fg_full <- lmer(fg$scr~fg$face+(1|pg$subject), REML=FALSE)
lm_fg_1 <- lmer(fg_1$scr~fg_1$face+(1|fg_1$sub), REML=FALSE)
lm_fg_2 <- lmer(fg_2$scr~fg_2$face+(1|fg_2$sub), REML=FALSE)
lm_fg_3 <- lmer(fg_3$scr~fg_3$face+(1|fg_3$sub), REML=FALSE)
lm_fg_full_poly <- lmer(fg$scr~poly(fg$face,2)+(1|pg$sub), REML=FALSE)
lm_fg_1_poly <- lmer(fg_1$scr~poly(fg_1$face,2)+(1|fg_1$sub), REML=FALSE)
lm_fg_2_poly <- lmer(fg_2$scr~poly(fg_2$face,2)+(1|fg_2$sub), REML=FALSE)
lm_fg_3_poly <- lmer(fg_3$scr~poly(fg_3$face,2)+(1|fg_3$sub), REML=FALSE)
## print out summary stats. AIC & BIC will be reported
## general trend of better poly fit for posgen, better
## linear fit for feargen
print(summary(lm_pg_full)$AICtab['BIC'])
print(summary(lm_pg_full_poly)$AICtab['BIC'])
lrtest(lm_pg_full_poly,lm_pg_full)
print(summary(lm_pg_1)$AICtab['BIC'])
print(summary(lm_pg_1_poly)$AICtab['BIC'])
lrtest(lm_pg_1_poly,lm_pg_1)
print(summary(lm_pg_2)$AICtab['BIC'])
print(summary(lm_pg_2_poly)$AICtab['BIC'])
lrtest(lm_pg_2_poly,lm_pg_2)
print(summary(lm_pg_3)$AICtab['BIC'])
print(summary(lm_pg_3_poly)$AICtab['BIC'])
lrtest(lm_pg_3_poly,lm_pg_3)
print(summary(lm_fg_full)$AICtab['BIC'])
print(summary(lm_fg_full_poly)$AICtab['BIC'])
lrtest(lm_fg_full_poly,lm_fg_full)
print(summary(lm_fg_1)$AICtab['BIC'])
print(summary(lm_fg_1_poly)$AICtab['BIC'])
lrtest(lm_fg_1_poly,lm_fg_1)
print(summary(lm_fg_2)$AICtab['BIC'])
print(summary(lm_fg_2_poly)$AICtab['BIC'])
lrtest(lm_fg_2_poly,lm_fg_2)
print(summary(lm_fg_3)$AICtab['BIC'])
print(summary(lm_fg_3_poly)$AICtab['BIC'])
lrtest(lm_fg_3_poly,lm_fg_3)
setwd("C:/Users/ACH/Dropbox (LewPeaLab)/Dunsmoor Lab/posgen")
getwd()
pg<-read.csv("posgen_data.csv")
pg_1 <- subset(pg, subset = phase == 1)
pg_2 <- subset(pg,subset = phase == 2)
pg_3 <- subset(pg,subset = phase == 3)
fg<-read.csv("feargen_data.csv")
fg_1 <- subset(fg, subset = phase == 1)
fg_2 <- subset(fg,subset = phase == 2)
fg_3 <- subset(fg,subset = phase == 3)
lm_pg_full <- lmer(pg$scr~pg$face+(1|pg$subject), REML=FALSE)
lm_pg_1 <- lmer(pg_1$scr~pg_1$face+(1|pg_1$sub), REML=FALSE)
lm_pg_2 <- lmer(pg_2$scr~pg_2$face+(1|pg_2$sub), REML=FALSE)
lm_pg_3 <- lmer(pg_3$scr~pg_3$face+(1|pg_3$sub), REML=FALSE)
lm_pg_full_poly <- lmer(pg$scr~poly(pg$face,2)+(1|pg$sub), REML=FALSE)
lm_pg_1_poly <- lmer(pg_1$scr~poly(pg_1$face,2)+(1|pg_1$sub), REML=FALSE)
lm_pg_2_poly <- lmer(pg_2$scr~poly(pg_2$face,2)+(1|pg_2$sub), REML=FALSE)
lm_pg_3_poly <- lmer(pg_3$scr~poly(pg_3$face,2)+(1|pg_3$sub), REML=FALSE)
lm_fg_full <- lmer(fg$scr~fg$face+(1|pg$subject), REML=FALSE)
rm(list=ls())
## installing lmer package
#setwd("/Users/ach3377/Db_lpl/Dunsmoor Lab/posgen")
setwd("C:/Users/ACH/Dropbox (LewPeaLab)/Dunsmoor Lab/posgen")
library("lme4")
library(lmtest)
pg<-read.csv("posgen_data.csv")
pg_1 <- subset(pg, subset = phase == 1)
pg_2 <- subset(pg,subset = phase == 2)
pg_3 <- subset(pg,subset = phase == 3)
fg<-read.csv("feargen_data.csv")
fg_1 <- subset(fg, subset = phase == 1)
fg_2 <- subset(fg,subset = phase == 2)
fg_3 <- subset(fg,subset = phase == 3)
lm_pg_full <- lmer(pg$scr~pg$face+(1|pg$subject), REML=FALSE)
lm_pg_1 <- lmer(pg_1$scr~pg_1$face+(1|pg_1$sub), REML=FALSE)
lm_pg_2 <- lmer(pg_2$scr~pg_2$face+(1|pg_2$sub), REML=FALSE)
lm_pg_3 <- lmer(pg_3$scr~pg_3$face+(1|pg_3$sub), REML=FALSE)
lm_pg_full_poly <- lmer(pg$scr~poly(pg$face,2)+(1|pg$sub), REML=FALSE)
lm_pg_1_poly <- lmer(pg_1$scr~poly(pg_1$face,2)+(1|pg_1$sub), REML=FALSE)
lm_pg_2_poly <- lmer(pg_2$scr~poly(pg_2$face,2)+(1|pg_2$sub), REML=FALSE)
lm_pg_3_poly <- lmer(pg_3$scr~poly(pg_3$face,2)+(1|pg_3$sub), REML=FALSE)
lm_fg_full <- lmer(fg$scr~fg$face+(1|pg$subject), REML=FALSE)
lm_fg_1 <- lmer(fg_1$scr~fg_1$face+(1|fg_1$sub), REML=FALSE)
lm_fg_2 <- lmer(fg_2$scr~fg_2$face+(1|fg_2$sub), REML=FALSE)
lm_fg_3 <- lmer(fg_3$scr~fg_3$face+(1|fg_3$sub), REML=FALSE)
lm_fg_full_poly <- lmer(fg$scr~poly(fg$face,2)+(1|pg$sub), REML=FALSE)
lm_fg_1_poly <- lmer(fg_1$scr~poly(fg_1$face,2)+(1|fg_1$sub), REML=FALSE)
lm_fg_2_poly <- lmer(fg_2$scr~poly(fg_2$face,2)+(1|fg_2$sub), REML=FALSE)
lm_fg_3_poly <- lmer(fg_3$scr~poly(fg_3$face,2)+(1|fg_3$sub), REML=FALSE)
print(summary(lm_pg_full)$AICtab['BIC'])
print(summary(lm_pg_full_poly)$AICtab['BIC'])
lrtest(lm_pg_full_poly,lm_pg_full)
lrtest(lm_pg_full,lm_pg_full_poly)
print(summary(lm_pg_1)$AICtab['BIC'])
print(summary(lm_pg_1_poly)$AICtab['BIC'])
lrtest(lm_pg_full_poly,lm_pg_full)
print(summary(lm_pg_full)$AICtab['BIC'])
print(summary(lm_pg_full_poly)$AICtab['BIC'])
lrtest(lm_pg_full_poly,lm_pg_full)
print(summary(lm_pg_1)$AICtab['BIC'])
print(summary(lm_pg_1_poly)$AICtab['BIC'])
lrtest(lm_pg_1_poly,lm_pg_1)
print(summary(lm_pg_2)$AICtab['BIC'])
print(summary(lm_pg_2_poly)$AICtab['BIC'])
lrtest(lm_pg_2_poly,lm_pg_2)
print(summary(lm_pg_2)$AICtab['BIC'])
print(summary(lm_pg_2_poly)$AICtab['BIC'])
print(summary(lm_pg_3)$AICtab['BIC'])
print(summary(lm_pg_3_poly)$AICtab['BIC'])
lrtest(lm_pg_3_poly,lm_pg_3)
print(summary(lm_fg_full)$AICtab['BIC'])
print(summary(lm_fg_full_poly)$AICtab['BIC'])
lrtest(lm_fg_full_poly,lm_fg_full)
lrtest(lm_fg_full,lm_fg_full_poly)
print(summary(lm_fg_1)$AICtab['BIC'])
print(summary(lm_fg_1_poly)$AICtab['BIC'])
lrtest(lm_fg_1_poly,lm_fg_1)
print(summary(lm_fg_2)$AICtab['BIC'])
print(summary(lm_fg_2_poly)$AICtab['BIC'])
lrtest(lm_fg_2_poly,lm_fg_2)
print(summary(lm_fg_3)$AICtab['BIC'])
print(summary(lm_fg_3_poly)$AICtab['BIC'])
lrtest(lm_fg_3_poly,lm_fg_3)
